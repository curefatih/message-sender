// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/tasks": {
            "put": {
                "description": "Creates new message task that will be consumed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task State"
                ],
                "summary": "Updates Task State",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/tasks/messages/": {
            "post": {
                "description": "Creates new message task that will be consumed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message Task"
                ],
                "summary": "CreatesMessageTask",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth Key",
                        "name": "x-ins-auth-key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Add MessageTaskCreateRequest",
                        "name": "MessageTaskCreateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MessageTaskCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.MessageTask"
                        }
                    }
                }
            }
        },
        "/api/v1/tasks/messages/{id}": {
            "delete": {
                "description": "Deletes message task that will",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message Task"
                ],
                "summary": "Deletes Message Task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth Key",
                        "name": "x-ins-auth-key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Message Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "response ok",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.MessageTaskCreateRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "model.MessageTask": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/model.TaskStatus"
                },
                "to": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.TaskStatus": {
            "type": "string",
            "enum": [
                "WAITING",
                "PROCESSING",
                "COMPLETED",
                "FAILED"
            ],
            "x-enum-varnames": [
                "WAITING",
                "PROCESSING",
                "COMPLETED",
                "FAILED"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
