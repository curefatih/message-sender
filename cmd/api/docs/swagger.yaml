definitions:
  dto.MessageTaskCreateRequest:
    properties:
      content:
        type: string
      to:
        type: string
    type: object
  dto.PageResponse-model_MessageTask:
    properties:
      data:
        items:
          $ref: '#/definitions/model.MessageTask'
        type: array
      page:
        type: integer
      pageSize:
        type: integer
    type: object
  dto.TaskStateUpdateRequest:
    properties:
      active:
        type: boolean
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  model.MessageTask:
    properties:
      content:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      status:
        $ref: '#/definitions/model.TaskStatus'
      to:
        type: string
      updatedAt:
        type: string
    type: object
  model.TaskStatus:
    enum:
    - WAITING
    - PROCESSING
    - COMPLETED
    - FAILED
    type: string
    x-enum-varnames:
    - WAITING
    - PROCESSING
    - COMPLETED
    - FAILED
info:
  contact: {}
paths:
  /api/v1/tasks:
    put:
      consumes:
      - application/json
      description: Creates new message task that will be consumed.
      parameters:
      - description: Add TaskStateUpdateRequest
        in: body
        name: TaskStateUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/dto.TaskStateUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 'message": string, "active": bool}'
          schema:
            type: map
      summary: Updates Task State
      tags:
      - Task State
  /api/v1/tasks/messages:
    get:
      consumes:
      - application/json
      description: Deletes message task that will
      parameters:
      - description: COMPLETED
        in: query
        name: status
        required: true
        type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.PageResponse-model_MessageTask'
      summary: Deletes Message Task
      tags:
      - Message Task
  /api/v1/tasks/messages/:
    post:
      consumes:
      - application/json
      description: Creates new message task that will be consumed.
      parameters:
      - description: Add MessageTaskCreateRequest
        in: body
        name: MessageTaskCreateRequest
        required: true
        schema:
          $ref: '#/definitions/dto.MessageTaskCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.MessageTask'
      summary: CreatesMessageTask
      tags:
      - Message Task
  /api/v1/tasks/messages/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes message task that will
      parameters:
      - description: Message Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Deletes Message Task
      tags:
      - Message Task
  /health:
    get:
      consumes:
      - application/json
      description: response ok
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: health
      tags:
      - health
swagger: "2.0"
